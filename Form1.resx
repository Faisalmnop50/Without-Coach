<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Sm8/YziB6QAAAABJRU5ErkJggg==
</value>
  </data>
</root>